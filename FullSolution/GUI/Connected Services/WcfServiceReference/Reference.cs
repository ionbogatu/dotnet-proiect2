//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.WcfServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMessage", ReplyAction="http://tempuri.org/IService/GetMessageResponse")]
        string GetMessage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetMessage", ReplyAction="http://tempuri.org/IService/GetMessageResponse")]
        System.Threading.Tasks.Task<string> GetMessageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getActiveResources", ReplyAction="http://tempuri.org/IService/getActiveResourcesResponse")]
        Model.resource[] getActiveResources();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getActiveResources", ReplyAction="http://tempuri.org/IService/getActiveResourcesResponse")]
        System.Threading.Tasks.Task<Model.resource[]> getActiveResourcesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteResource", ReplyAction="http://tempuri.org/IService/deleteResourceResponse")]
        void deleteResource(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteResource", ReplyAction="http://tempuri.org/IService/deleteResourceResponse")]
        System.Threading.Tasks.Task deleteResourceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/saveResources", ReplyAction="http://tempuri.org/IService/saveResourcesResponse")]
        void saveResources(System.Collections.Generic.Dictionary<string, object>[] resources);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/saveResources", ReplyAction="http://tempuri.org/IService/saveResourcesResponse")]
        System.Threading.Tasks.Task saveResourcesAsync(System.Collections.Generic.Dictionary<string, object>[] resources);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : GUI.WcfServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<GUI.WcfServiceReference.IService>, GUI.WcfServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMessage() {
            return base.Channel.GetMessage();
        }
        
        public System.Threading.Tasks.Task<string> GetMessageAsync() {
            return base.Channel.GetMessageAsync();
        }
        
        public Model.resource[] getActiveResources() {
            return base.Channel.getActiveResources();
        }
        
        public System.Threading.Tasks.Task<Model.resource[]> getActiveResourcesAsync() {
            return base.Channel.getActiveResourcesAsync();
        }
        
        public void deleteResource(int id) {
            base.Channel.deleteResource(id);
        }
        
        public System.Threading.Tasks.Task deleteResourceAsync(int id) {
            return base.Channel.deleteResourceAsync(id);
        }
        
        public void saveResources(System.Collections.Generic.Dictionary<string, object>[] resources) {
            base.Channel.saveResources(resources);
        }
        
        public System.Threading.Tasks.Task saveResourcesAsync(System.Collections.Generic.Dictionary<string, object>[] resources) {
            return base.Channel.saveResourcesAsync(resources);
        }
    }
}
